{"version":3,"sources":["Loader.js","utils.js","ColorCreator.js","ColorList.js","index.js","App.js"],"names":["className","consonants","vowels","getRandomNumber","cap","Math","floor","random","getRandomItem","arr","length","getRandomConsonant","getRandomBool","getRandomPair","generateRandomColorName","name","ColorCreator","createColor","useState","setName","hue","setHue","type","value","onChange","target","min","max","step","onClick","newColor","hsl","disabled","style","marginRight","colorData","handleColorClick","map","index","key","color","ReactDOM","render","setColorData","useEffect","fetch","then","response","json","colors","catch","console","warn","hslArray","exec","slice","randomSaturation","changeSaturation","document","getElementById"],"mappings":"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","file":"static/js/main.a1686145.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./Loader.css\";\n\nexport default () => <div className=\"loader\" />;\n","// Helper functions\nconst consonants = [\n  \"b\",\n  \"c\",\n  \"d\",\n  \"f\",\n  \"g\",\n  \"h\",\n  \"j\",\n  \"k\",\n  \"l\",\n  \"m\",\n  \"n\",\n  \"p\",\n  \"r\",\n  \"s\",\n  \"t\",\n  \"v\",\n  \"w\",\n  \"x\",\n  \"y\",\n  \"z\"\n];\nconst vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"];\n\nconst getRandomNumber = cap => Math.floor(Math.random() * cap);\nconst getRandomItem = arr => arr[getRandomNumber(arr.length)];\nconst getRandomConsonant = () => getRandomItem(consonants);\nconst getRandomVowel = () => getRandomItem(vowels);\nconst getRandomBool = () => Math.random() >= 0.5;\nconst getRandomPair = () => getRandomVowel() + getRandomConsonant();\n\nfunction generateRandomColorName() {\n  let name = Math.random() >= 0.3 ? getRandomConsonant() : getRandomPair();\n  name += getRandomPair();\n  if (getRandomBool()) {\n    name += getRandomPair();\n  }\n  if (getRandomBool()) {\n    name += getRandomPair();\n  }\n  return name;\n}\n\nexport function generateRandomColor() {\n  return {\n    name: generateRandomColorName(),\n    hsl: `hsl(${getRandomNumber(359)}, 100%, 50%)`\n  };\n}\n\nexport function changeSaturation(hsl) {\n  const regexp = /hsl\\(\\s*(\\d+)\\s*,\\s*(\\d+%)\\s*,\\s*(\\d+%)\\)/g;\n  const hslArray = regexp.exec(hsl).slice(1);\n  const randomSaturation = Math.floor(Math.random() * 75 + 25);\n  return `hsl(${hslArray[0]}, ${randomSaturation}%, ${hslArray[2]})`;\n}\n","import React, { useState } from \"react\";\nimport { generateRandomColor } from \"./utils\";\nimport \"./ColorCreator.css\";\n\nexport default function ColorCreator({ createColor }) {\n  const [name, setName] = useState(\"\");\n  const [hue, setHue] = useState(0);\n  const handleNameChange = ({ target }) => setName(target.value);\n  const handleHueChange = ({ target }) => setHue(target.value);\n  function handleClick() {\n    const newColor = {\n      name,\n      hsl: `hsl(${hue}, 100%, 50%)`\n    };\n    createColor(newColor);\n    setName(\"\");\n    setHue(0);\n  }\n  const createRandomColor = () => createColor(generateRandomColor());\n  return (\n    <div className=\"color-creator\">\n      <label>\n        Name:\n        <input type=\"text\" value={name} onChange={handleNameChange} />\n      </label>\n      <label>\n        Hue:\n        <input\n          type=\"number\"\n          value={hue}\n          onChange={handleHueChange}\n          min=\"0\"\n          max=\"355\"\n          step=\"5\"\n        />\n      </label>\n      <div className=\"actions\">\n        <button onClick={handleClick} disabled={!name.length}>\n          Create color\n        </button>\n        <p style={{ marginRight: 8 }}>Or...</p>\n        <button onClick={createRandomColor}>Generate random color</button>\n      </div>\n    </div>\n  );\n}\n","import React from \"react\";\nimport \"./ColorList.css\";\n\nexport default ({ colorData, handleColorClick }) => (\n  <div className=\"color-list\">\n    <p>Click a color to see a different saturation.</p>\n    <ul>\n      {colorData.map(({ name, hsl }, index) => (\n        <li\n          key={`${name}-${hsl}-${index}`}\n          style={{ color: hsl }}\n          onClick={() => handleColorClick(index)}\n        >\n          {name}\n        </li>\n      ))}\n    </ul>\n  </div>\n);\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n","import React, { useState, useEffect } from \"react\";\nimport Loader from \"./Loader\";\nimport ColorCreator from \"./ColorCreator\";\nimport ColorList from \"./ColorList\";\nimport { changeSaturation } from \"./utils\";\nimport \"./App.css\";\n\nexport default function App() {\n  const [colorData, setColorData] = useState([]);\n  useEffect(() => {\n    fetch(\"./colors.json\")\n      .then(response => response.json())\n      .then(({ colors }) => setColorData(colors))\n      .catch(console.warn);\n  }, []);\n  const createColor = newColor => setColorData([...colorData, newColor]);\n  const handleColorClick = index => {\n    const colors = [...colorData];\n    colors[index].hsl = changeSaturation(colors[index].hsl);\n    setColorData(colors);\n  };\n  if (!colorData.length) return <Loader />;\n  return (\n    <section>\n      <ColorCreator createColor={createColor} />\n      <ColorList colorData={colorData} handleColorClick={handleColorClick} />\n    </section>\n  );\n}\n"],"sourceRoot":""}